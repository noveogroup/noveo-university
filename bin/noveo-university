#!/usr/bin/env node

var path = require('path');
var magic = require('../');

var yargs = require('yargs')
  .usage('Usage: $0 <command> [options]')
  .command('build', 'Build presentation')
  .command('watch', 'Watch changes, rebuild, and reload browser')
  .demand(1, 'You must provide a valid command')
  .check(function(argv){
    if(!argv._[0].match(/build|watch/)) {
      throw new Error('You must provide a valid command');
    }
    return true;
  })
  .option('i', {
    alias : 'input',
    'default': './slides',
    describe: 'Path to sources'
  })
  .option('o', {
    alias : 'output',
    'default': './dist',
    describe: 'Path to destination'
  })
  .help('h')
  .alias('h', 'help')
  .version(function() {
    return 'Version: ' + require('../package').version;
  })
  .alias('version', 'v');

var argv = yargs.argv;
var command = argv._[0];

console.dir(argv);
console.log('command:', command);

var cwd = process.cwd();

var source =
  path.isAbsolute(argv.input) ? argv.input : path.join(cwd, argv.input);
var destination =
  path.isAbsolute(argv.output) ? argv.output : path.join(cwd, argv.output);

switch (command) {
  case 'build':
    magic.build(source, destination, false, function(err) {
      if (err) {
        console.error(err.message);
        return;
      }
      console.log('Presentation successfully created!');
    });
    break;
  case 'watch':
    magic.watch(source, destination, function(err, message) {
      if (err) {
        console.error(err.message);
        return;
      }
      console.log(message);
    });
    break;
  default:
    yargs.showHelp();
}
